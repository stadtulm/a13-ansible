---
- name: Basic Setup
  hosts: all
  become: yes
  tags:
    - base
  vars_files:
    - vars.yml
  roles:
    - base

- name: Base User setup/update
  hosts: all
  become: yes
  tags:
    - base
    - user
  vars_files:
    - vars.yml
  roles:
    - base-user

- name: Monitored host
  hosts: all
  become: yes
  vars:
    _node_exporter_binary_install_dir: '/opt/node_exporter'
    _node_exporter_system_group: 'prometheus'
    _node_exporter_system_user: 'prometheus'
  roles:
    - cloudalchemy.node-exporter
    - node-exporter-ufw

- name: DNS Server
  hosts: dns
  become: yes
  tags:
    - dns
  vars:
    coredns_config_file: files/coredns/Corefile.j2
  roles:
    - cloudalchemy.coredns
    - coredns-ufw

- name: TURN Server
  hosts: turn
  become: yes
  tags:
    - turn
  vars_files:
    - vars.yml
  roles:
    - turn-standalone
    
- name: BigBlueButton
  hosts: bbb
  become: yes
  tags:
    - bbb
  vars_files:
    - vars.yml
  vars:
    bbb_letsencrypt_enable: yes
    bbb_letsencrypt_email: "{{ letsencrypt_email }}"
    bbb_coturn_enable: no
    bbb_turn_enable: yes
    bbb_stun_servers:
      - server: "{{ bbb_additional_turn_server }}:3478"
    bbb_turn_servers:
      - server: "{{ bbb_additional_turn_server }}"
        port: 443
        secret: "{{ turn_secret }}"
        tls: true
      - server: "{{ bbb_additional_turn_server }}"
        port: 3478
        secret: "{{ turn_secret }}"
        tls: false
    bbb_greenlight_enable: no
    bbb_api_demos_enable: no
  roles:
    - nginx
    - dirty-docker # dirty hack because docker role in n0emis BBB will fail if docker group not present
    - n0emis.bigbluebutton
    - bbb-ulmlernt
    # TODO remove Docker from install process
    # removal of docker group makes problems if docker is reinstalled by gerlingguyscript in n0emis
    - no-docker 

- name: TURN Test Server
  hosts: turn_test
  become: yes
  tags:
    - test
  vars_files:
    - vars.yml
  roles:
    - turn-standalone-zerossl

- name: BigBlueButton Test Zerossl
  hosts: bbb_test_turn_ssl
  become: yes
  tags:
    - test
  vars_files:
    - vars.yml
  vars:
    bbb_letsencrypt_enable: yes
    bbb_letsencrypt_email: "{{ letsencrypt_email }}"
    bbb_coturn_enable: no
    bbb_turn_enable: yes
    bbb_stun_servers:
      - server: "{{ bbb_additional_turn_server }}:3478"
    bbb_turn_servers:
      - server: "{{ bbb_additional_turn_server }}"
        port: 443
        secret: "{{ turn_secret }}"
        tls: true
      - server: "{{ bbb_additional_turn_server }}"
        port: 3478
        secret: "{{ turn_secret }}"
        tls: false
    bbb_greenlight_enable: no
    bbb_api_demos_enable: no
  roles:
    - nginx
    - dirty-docker # dirty hack because docker role in n0emis BBB will fail if docker group not present
    - n0emis.bigbluebutton
    - bbb-ulmlernt
    # TODO remove Docker from install process
    # removal of docker group makes problems if docker is reinstalled by gerlingguyscript in n0emis
    - no-docker 

- name: BigBlueButton Test no ssl
  hosts: bbb_test_turn_nossl
  become: yes
  tags:
    - test
  vars_files:
    - vars.yml
  vars:
    bbb_letsencrypt_enable: yes
    bbb_letsencrypt_email: "{{ letsencrypt_email }}"
    bbb_coturn_enable: no
    bbb_turn_enable: yes
    bbb_stun_servers:
      - server: "{{ bbb_additional_turn_server }}:3478"
    bbb_turn_servers:
      - server: "{{ bbb_additional_turn_server }}"
        port: 3478
        secret: "{{ turn_secret }}"
        tls: false
    bbb_greenlight_enable: no
    bbb_api_demos_enable: no
  roles:
    - nginx
    - dirty-docker # dirty hack because docker role in n0emis BBB will fail if docker group not present
    - n0emis.bigbluebutton
    - bbb-ulmlernt
    # TODO remove Docker from install process
    # removal of docker group makes problems if docker is reinstalled by gerlingguyscript in n0emis
    - no-docker 

- name: Collect BBB secrets
  hosts: bbb
  become: yes
  tags:
    - bbb
    - config
  roles:
    - bbb-collect

- name: BBB Exporter
  hosts: bbb
  become: yes
  tags:
    - bbb
  roles:
    - bbb-exporter

- name: Loadbalancer
  hosts: loadbalancer
  become: yes
  tags:
    - loadbalancer
  vars_files:
    - vars.yml
  vars:
    redis_port: 6379
    redis_bind_interface: 127.0.0.1
    ruby_install_from_source: yes
    ruby_version: 2.6.6
    ruby_download_url: https://cache.ruby-lang.org/pub/ruby/2.6/ruby-2.6.6.tar.gz
    ruby_install_bundler: yes
    postgresql_hba_entries:
      - {type: local, database: all, user: postgres, auth_method: peer}
      - {type: local, database: all, user: all, auth_method: peer}
      - {type: host, database: all, user: all, address: '127.0.0.1/32', auth_method: trust}
      - {type: host, database: all, user: all, address: '::1/128', auth_method: trust}
    postgresql_users:
      - name: scalelite
        state: present
      - name: grafana
        state: present
    postgresql_databases:
      - name: scalelite
        owner: scalelite
        state: present
      - name: grafana
        owner: grafana
        state: present
  roles:
    - nginx
    - nginx-tls
    - geerlingguy.redis
    - role: geerlingguy.postgresql
      become: yes
    - geerlingguy.ruby
    - scalelite

- name: Register BBBs at Loadbalancer
  hosts: loadbalancer
  become: yes
  tags:
    - loadbalancer
    - config
  roles:
    - scalelite-config

- name: Easy Join
  hosts: loadbalancer
  become: yes
  vars_files:
    - vars.yml
  vars:
    nodejs_version: "12.x"
    bbb_secret: "{{ scalelite_loadbalancer_secret }}"
  tags:
    - loadbalancer
  roles:
    - nginx
    - nginx-tls
    - geerlingguy.nodejs
    - bbb-easy-join

- name: Frontend - Greenlight
  hosts: frontend
  become: yes
  vars_files:
    - vars.yml
  tags:
    - frontend
    - greenlight
  vars:
    nginx_domain_name: "ulmlernt.de"
    nginx_redirect_alias: "www.ulmlernt.de"
    lb_url: "{{ scalelite_loadbalancer_url }}"
    lb_secret: "{{ scalelite_loadbalancer_secret }}"
    redis_port: 6379
    redis_bind_interface: 127.0.0.1
    ruby_install_from_source: yes
    ruby_version: 2.6.6
    ruby_download_url: https://cache.ruby-lang.org/pub/ruby/2.6/ruby-2.6.6.tar.gz
    ruby_install_bundler: yes
    nodejs_version: "12.x"
    postgresql_hba_entries:
      - {type: local, database: all, user: postgres, auth_method: peer}
      - {type: local, database: all, user: all, auth_method: peer}
      - {type: host, database: all, user: all, address: '127.0.0.1/32', auth_method: trust}
      - {type: host, database: all, user: all, address: '::1/128', auth_method: trust}
    postgresql_users:
      - name: greenlight
        state: present
        role_attr_flags: CREATEDB # rake db:migrate needs priv
    postgresql_databases:
      - name: greenlight_production
        owner: greenlight
        state: present
  roles:
    - nginx
    - nginx-tls
    - nginx-tls-redirect
    - geerlingguy.redis
    - role: geerlingguy.postgresql
      become: yes
    - geerlingguy.ruby
    - geerlingguy.nodejs
    #- docker
    - greenlight
    #- greenlight-docker

- name: Frontend - no rocketchat
  hosts: frontend
  become: yes
  vars_files:
    - vars.yml
  vars:
    nginx_domain_name: "ulmlernt.de"
    nginx_redirect_alias: "chat.ulmlernt.de"
  tags:
    - no-rocketchat
  roles:
    - nginx
    - nginx-tls-redirect


- name: Frontend - Dokuwiki
  hosts: frontend
  become: yes
  vars_files:
    - vars.yml
  tags:
    - frontend
    - dokuwiki
  vars:
    nginx_domain_name: "doku.ulmlernt.de"
    nginx_root: "/var/www/dokuwiki"
  roles:
    - nginx
    - nginx-tls-add
    - dokuwiki

- name: Monitoring
  hosts: loadbalancer
  become: yes
  tags:
    - monitoring
  vars_files:
    - vars.yml
  vars:
    nginx_domain_name: mon.ulmlernt.org
    prometheus_targets:
      node:
      - targets:
          "{{ groups['all'] | map('extract', hostvars, ['ansible_fqdn']) | map('regex_replace', '$', ':9100') | list }}"
      bbb:
      - targets:
          "{{ groups['bbb'] | map('extract', hostvars, ['ansible_fqdn']) | map('regex_replace', '$', ':9688') | list }}"
    prometheus_scrape_configs:
      - job_name: "prometheus"
        metrics_path: "/metrics"
        static_configs:
          - targets:
            - "127.0.0.1:9090"
      - job_name: "coredns"
        metrics_path: "/metrics"
        static_configs:
          - targets:
            - "{{ ansible_default_ipv4.address }}:9153"
      - job_name: "node"
        file_sd_configs:
          - files:
            - "/etc/prometheus/file_sd/node.yml"
        relabel_configs:
          - source_labels: ['__address__']
            separator:     ':'
            regex:         '(.*):.*'
            target_label:  'instance'
            replacement:   '$1'
      - job_name: "bbb"
        file_sd_configs:
          - files:
            - "/etc/prometheus/file_sd/bbb.yml"
        relabel_configs:
          - source_labels: ['__address__']
            separator:     ':'
            regex:         '(.*):.*'
            target_label:  'instance'
            replacement:   '$1'
    grafana_address: 127.0.0.1
    grafana_port: 3001
    grafana_url: "https://mon.ulmlernt.org"
    grafana_domain: "mon.ulmlernt.org"
    grafana_database:
      type: postgres
      host: 127.0.0.1:5432
      name: grafana
      user: grafana
      password: trust
    grafana_datasources:
      - name: prometheus
        type: prometheus
        access: proxy
        url: 'http://localhost:9090'
        basicAuth: false
        isDefault: true
    grafana_dashboards_dir: files/grafana/dashboards
    grafana_security:
      admin_user: admin
      admin_password: "{{ monitoring_grafana_admin_password }}"
    grafana_users:
      allow_sign_up: false
      default_theme: dark
      auto_assign_org: true
      editors_can_admin: true
      auto_assign_org_role: Editor
    grafana_auth:
      disable_login_form: true
      anonymous:
        enabled: true
        org_name: ulmlernt
        org_role: Viewer
      github:
        enabled: true
        allow_sign_up: true
        client_id: "{{ monitoring_github_client_id }}"
        client_secret: "{{ monitoring_github_client_secret }}"
        scopes: user:email,read:org
        auth_url: https://github.com/login/oauth/authorize
        token_url: https://github.com/login/oauth/access_token
        api_url: https://api.github.com/user
        team_ids: ""
        allowed_organizations: stadtulm
  roles:
    - cloudalchemy.prometheus
    - prometheus-ufw
    - cloudalchemy.grafana
    - nginx-tls-monitoring

- name: Backup Server
  hosts: backupstorage
  tags: 
    - backup
  become: yes
  vars:
    rest_backup_storage_dir: "/mnt/backup/restic"
    rest_backup_server: "bck.ulmlernt.org"
    rest_backup_tasks:
      - { name: "dokuwiki", conn_pw: "{{ restic_backup_dokuwiki_conn_pw }}", backup_pw: "{{ restic_backup_dokuwiki_backup_pw }}" }
      - { name: "greenlight" , conn_pw: "{{ restic_backup_greenlight_conn_pw }}", backup_pw: "{{ restic_backup_greenlight_backup_pw }}" }
      - { name: "zammad" , conn_pw: "{{ restic_backup_zammad_conn_pw }}", backup_pw: "{{ restic_backup_zammad_backup_pw }}" }
  vars_files:
    - vars.yml
  roles:
    - restic-server

- name: Backup Client - Dokuwiki
  hosts: frontend
  become: yes
  tags:
    - backup 
  vars_files:
    - vars.yml
  vars:
    backup_name: "dokuwiki"
    backup_server: "{{ restic_backup_server }}"
    backup_conn_pw: "{{ restic_backup_dokuwiki_conn_pw }}"
    backup_pw: "{{ restic_backup_dokuwiki_backup_pw }}"
    backup_script: "backup_directory.sh"
    backup_dir: "/var/www/dokuwiki"
  roles:
    - restic-client

- name: Backup Client - Greenlight
  hosts: frontend
  become: yes
  tags:
    - backup 
  vars_files:
    - vars.yml
  vars:
    backup_name: "greenlight"
    backup_server: "{{ restic_backup_server }}"
    backup_conn_pw: "{{ restic_backup_greenlight_conn_pw }}"
    backup_pw: "{{ restic_backup_greenlight_backup_pw }}"
    backup_script: "backup_postgres.sh"
    backup_pg_db: "greenlight_production"
  roles:
    - restic-client

- name: Support Ticket System Zammad
  hosts: support
  become: yes
  tags:
    - support
    - backup 
  vars_files:
    - vars.yml
  vars:
    nginx_domain_name: support.ulmlernt.de
    nginx_redirect_alias: support.ulmlernt.org
    elasticsearch_version: '7.x'
    elasticsearch_extra_options: | 
      http.max_content_length: 400mb
      indices.query.bool.max_clause_count: 2000
    backup_name: "zammad"
    backup_server: "{{ restic_backup_server }}"
    backup_conn_pw: "{{ restic_backup_zammad_conn_pw }}"
    backup_pw: "{{ restic_backup_zammad_backup_pw }}"
    backup_script: "backup_directory.sh"
    backup_dir: "/var/tmp/zammad_backup"
  roles:
    - nginx
    - nginx-tls
    - nginx-tls-redirect
    - geerlingguy.java
    - geerlingguy.elasticsearch
    - geerlingguy.mailhog
    - zammad
    - restic-client
  
