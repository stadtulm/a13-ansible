---
- name: "Ensure restic-server user"
  user:
    name: rest-server
    shell: /bin/bash
    password: '!'
    update_password: on_create
    groups: nogroup
    state: present

- name: "Ensure restic-server binary"
  copy: 
    src: ../files/rest-server-0.9.7-linux-amd64
    dest: /usr/local/bin/rest-server
    owner: rest-server
    mode: '0700'

- name: "Ensure restic-server backup root directory"
  file:
    path: "{{ rest_backup_storage_dir }}"
    state: directory
    owner: rest-server
    mode: '0700'

- name: "Ensure restic-server systemd unit"
  template:
    src: rest-server.service
    dest: /etc/systemd/system/rest-server.service

- name: "enable rest-server systemd"
  systemd:
    name: rest-server.service
    state: started
    enabled: yes

- name: "Ensure rest-server is reachable from outside"
  ufw:
    rule: allow
    port: 8000

- name: "ensure python lib for htpasswd actions"
  apt:
    name: 
      - python3-passlib
      - python3-bcrypt
    state: present

# for certbot standalone mode
- name: "ensure no Webserver installed"
  apt:
    name: 
      - nginx
      - apache2
    state: absent

    
- import_tasks: letsencrypt.yml

- name: "Ensure etc/rest-server"
  file:
    path: "/etc/rest-server"
    state: directory
    owner: rest-server
    mode: '0700'

- name: "Get current certificate path"
  stat:
    path: "/etc/letsencrypt/live/{{ rest_backup_server }}/fullchain.pem"
  register: rest_cert
  
- name: "Get current private key path"
  stat:
    path: "/etc/letsencrypt/live/{{ rest_backup_server }}/privkey.pem"
  register: rest_key

- name: "ensure cert are readable for rest-server"
  copy:
    src: "{{ item.src }}"
    dest: "/etc/rest-server/{{ item.dest }}"
    owner: rest-server
    remote_src: yes
  loop:
    - { src: "{{ rest_key.stat.lnk_source }}", dest: "privkey.pem" }
    - { src: "{{ rest_cert.stat.lnk_source }}", dest: "fullchain.pem" }
  notify: restart rest-server

- name: "Ensure Backup User can connect"
  htpasswd:
    path: "{{ rest_backup_storage_dir }}/.htpasswd"
    name: "{{ item.name }}"
    password: "{{ item.conn_pw }}"
    owner: rest-server
    mode: "0600"
    crypt_scheme: bcrypt
  with_items: "{{ rest_backup_tasks }}"

